---
knitr:
  opts_chunk:
    fig.width: 12
    fig.height: 7
---

```{r init}

pkgs <- c("targets", "magrittr")
pkgs_load <- sapply(pkgs, library, character.only = TRUE)

options(digits = 2)

getArimaParam <- function(mod) {
  orders <- mod$arma %>% {c(
    "p" = .[1],
    "q" = .[2],
    "P" = .[3],
    "Q" = .[4],
    "d" = .[6],
    "D" = .[7]
  )}
  res <- sprintf(
    "(%s) (%s)",
    paste(orders[c("p", "d", "q")], collapse = ", "),
    paste(orders[c("P", "D", "Q")], collapse = ", ")
  )
  return(res)
}

reportMod <- function(mods) {
  require("kableExtra")
  tar_load(med_groups)
  spec  <- lapply(mods, getArimaParam)
  label <- sprintf("%s %s", med_groups, spec)
  res   <- mods %>%
    set_names(label) %>%
    lapply(function(mod) {
      tryCatch(
        mod %>% lmtest::coeftest() %>% broom::tidy() %>% data.frame(),
        error = function(e) { # In case error due to no AR nor MA component
          data.frame(
            "term" = NA,
            "estimate" = NA,
            "std.error" = NA,
            "statistic" = NA,
            "p.value" = NA
          )
        }
      )
    }) %>%
    subset(subset = !is.na(.)) %>%
    {do.call(rbind, .)} %>%
    tibble::add_column("Model" = gsub(x = rownames(.), "\\..*", ""), .before = 1) %>%
    set_rownames(c()) %>%
    kable(longtable = TRUE, booktabs = TRUE) %>%
    kable_styling(font_size = 10, latex_options = c("repeat_header"))

  return(res)
}

reportLB <- function(mod_evals) {
  require("kableExtra")
  tar_load(med_groups)
  res <- mod_evals %>%
    set_names(med_groups) %>%
    {do.call(rbind, .)} %>%
    set_colnames(c("Ljung-Box", "p")) %>%
    kable(longtable = TRUE, booktabs = TRUE) %>%
    kable_styling(latex_options = c("repeat_header"))

  return(res)
}

```

# Results

## Model evaluation

### Number of claim

#### Model fit

```{r}

tar_read(mod_arima_n_claim) %>% reportMod()

```

#### Portmanteau test

```{r}

tar_read(mod_arima_eval_n_claim) %>% reportLB()

```

{{< pagebreak >}}

### Claim-to-patient ratio

#### Model fit

```{r}

tar_read(mod_arima_claim2patient) %>% reportMod()

```

#### Portmanteau test

```{r}

tar_read(mod_arima_eval_claim2patient) %>% reportLB()

```

{{< pagebreak >}}

### Eigenvector centrality

#### Model fit

```{r}

tar_read(mod_arima_eigen) %>% reportMod()

```

#### Portmanteau test

```{r}

tar_read(mod_arima_eval_eigen) %>% reportLB()

```

{{< pagebreak >}}
\KOMAoptions{paper=landscape,pagesize}
\recalctypearea

## Forecast evaluation

### Number of claim

```{r}

tar_read(plt_arima_forecast_n_claim)

```

{{< pagebreak >}}

### Claim-to-patient ratio

```{r}

tar_read(plt_arima_forecast_claim2patient)

```

{{< pagebreak >}}

### Eigenvector centrality

```{r}

tar_read(plt_arima_forecast_eigen)

```
